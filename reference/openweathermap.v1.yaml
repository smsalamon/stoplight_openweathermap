openapi: 3.0.0
info:
  title: openweathermap
  version: '1.0'
  description: |-
    OpenWeatherMap API version: 2.5 <br/><br/>
    API description: Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. <br/><br/>

    **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/>**Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
  contact:
    name: Support
    url: 'https://openweathermap.org/api'
    email: some_email@gmail.com
  termsOfService: 'https://openweathermap.org/terms'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  weather:
    parameters: []
    get:
      summary: Get User Info by User ID
      tags:
        - current weather endpoints
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-weather-by-city
      description: 'You can call by city name or city name, state code and country code. Please note that searching by states available only for the USA locations.'
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: 'City name, state code and country code divided by comma, use ISO 3166 country codes.<br/> You can specify the parameter not only in English. In this case, the API response should be returned in the same language as the language of requested location name if the location is in our predefined list of more than 200,000 locations.'
          required: true
        - schema:
            type: string
          in: query
          name: appid
          description: 'Your unique API key (you can always find it on your account page under the ["API key" tab](https://home.openweathermap.org/api_keys))'
          required: true
        - schema:
            type: string
          in: query
          name: mode
          description: 'Response format. Possible values are `xml` and `html`. If you don''t use the `mode` parameter format is JSON by default. [Learn more](https://openweathermap.org/current#format)'
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes:
    app_id:
      name: appid
      type: apiKey
      in: query
tags:
  - name: current weather endpoints
security:
  - app_id: []
